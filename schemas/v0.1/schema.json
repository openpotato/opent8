{
  "$id": "https://github.com/openpotato/opent8/blob/main/schemas/v0.1/schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "OpenT8 Document Schema Specification",
  "description": "The specification of OpenT8 v0.1.x documents",
  "type": "object",
  "properties": {
    "opent8": {
      "description": "The version of the OpenT8 Document Schema",
      "type": "string",
      "pattern": "^0\\.0\\.\\d+$"
    },
    "info": {
      "$ref": "#/$defs/info"
    },
    "persons": {
      "description": "A list of persons",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "#/$defs/person"
      }
    },
    "roles": {
      "description": "A list of roles",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "#/$defs/role"
      }
    },
    "groups": {
      "description": "A list of groups",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "#/$defs/group"
      }
    },
    "groupTypes": {
      "description": "A list of group types",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "#/$defs/groupType"
      }
    },
    "rooms": {
      "description": "A list of rooms",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "#/$defs/room"
      }
    },
    "buildings": {
      "description": "A list of buildings",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "#/$defs/building"
      }
    },
    "campuses": {
      "description": "A list of campuses",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "#/$defs/campus"
      }
    },
    "supervisionAreas": {
      "description": "A list of supervision areas",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "#/$defs/supervisionArea"
      }
    },
    "eventTypes": {
      "description": "A list of event types",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "#/$defs/eventType"
      }
    },
    "timeFrames": {
      "description": "A list of time frames",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "#/$defs/timeFrame"
      }
    },
    "subjects": {
      "description": "A list of subjects",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "#/$defs/subject"
      }
    },
    "courses": {
      "description": "A list of courses",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "#/$defs/course"
      }
    },
    "schedule": {
      "description": "The schedule definition",
      "type": "object",
      "properties": {
        "validFrom": {
          "description": "Valid from",
          "type": "string",
          "format": "date",
          "examples": [
            "2023-09-01"
          ]
        },
        "validTo": {
          "description": "Valid to",
          "type": "string",
          "format": "date",
          "examples": [
            "2024-01-31"
          ]
        },
        "defaultTimeFrame": {
          "description": "Reference by id to a default time frame",
          "$ref": "#/$defs/reference"
        },
        "scheduleElements": {
          "description": "A list of schedule elements",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/lesson"
              },
              {
                "$ref": "#/$defs/supervision"
              },
              {
                "$ref": "#/$defs/gap"
              },
              {
                "$ref": "#/$defs/event"
              },
              {
                "$ref": "#/$defs/holiday"
              },
              {
                "$ref": "#/$defs/announcement"
              }
            ]
          }
        }
      },
      "required": [
        "validFrom",
        "validTo"
      ],
      "$ref": "#/$defs/specification-extensions",
      "additionalProperties": false
    }
  },
  "required": [
    "opent8",
    "info",
    "schedule"
  ],
  "additionalProperties": false,
  "$defs": {
    "info": {
      "type": "object",
      "properties": {
        "title": {
          "description": "The title of the timetable",
          "type": "string"
        },
        "description": {
          "description": "A description for the timetable",
          "type": "string"
        },
        "summary": {
          "description": "A summary for the timetable",
          "type": "string"
        },
        "publishedAt": {
          "description": "The timepoint of the publication",
          "type": "string",
          "format": "date-time",
          "examples": [
            "2023-09-01T10:00:00",
            "2023-09-01T10:00:00+02:00"
          ]
        },
        "publishedFrom": {
          "description": "The person responsible for the publication",
          "type": "string"
        },
        "language": {
          "description": "The ISO 639-1 language code for the content",
          "type": "string",
          "examples": [
            "de",
            "en",
            "fr",
            "rm",
            "it"
          ]
        },
        "source": {
          "$ref": "#/$defs/source"
        }
      },
      "required": [
        "title"
      ],
      "$ref": "#/$defs/specification-extensions",
      "additionalProperties": false
    },
    "source": {
      "description": "Information about the source of the timetable data",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the service, application or tool that generated the data",
          "type": "string"
        },
        "version": {
          "description": "Version of the service, application or tool that generated the data",
          "type": "string"
        },
        "url": {
          "description": "More information about the service, application or tool that generated the data",
          "type": "string",
          "format": "uri",
          "examples": [
            "https://www.example.com"
          ]
        }
      },
      "required": [
        "name"
      ],
      "$ref": "#/$defs/specification-extensions",
      "additionalProperties": false
    },
    "person": {
      "description": "A person (e.g. a teacher or student)",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identification",
          "type": "string"
        },
        "code": {
          "description": "A (possible unique) code",
          "type": "string"
        },
        "lastName": {
          "description": "Last name",
          "type": "string"
        },
        "middleName": {
          "description": "Middle name",
          "type": "string"
        },
        "firstName": {
          "description": "First name",
          "type": "string"
        },
        "namePrefix": {
          "description": "Name prefix",
          "type": "string"
        },
        "nameQualifier": {
          "description": "Name qualifier or title",
          "type": "string"
        },
        "nameSuffix": {
          "description": "Name suffix",
          "type": "string"
        },
        "birthdate": {
          "description": "Birth date",
          "type": "string",
          "format": "date",
          "examples": [
            "1969-07-20"
          ]
        },
        "color": {
          "description": "The color of the person as hex code",
          "type": "string",
          "pattern": "^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$",
          "examples": [
            "#ff0000",
            "#FF0000"
          ]
        },
        "timeFrame": {
          "description": "Reference by id to a time frame",
          "$ref": "#/$defs/reference"
        }
      },
      "required": [
        "id",
        "code"
      ],
      "$ref": "#/$defs/specification-extensions",
      "additionalProperties": false
    },
    "role": {
      "description": "An attendee role",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique identification of the role",
          "type": "string"
        },
        "code": {
          "description": "The code of the role",
          "type": "string"
        },
        "key": {
          "description": "The standardised key of the role",
          "enum": [
            "DE.KIND",
            "DE.SCHÜ",
            "DE.STUD",
            "DE.LEHR",
            "DE.DOZN",
            "DE.ERZI",
            "DE.EZBE"
          ]
        },
        "name": {
          "description": "The name of the role",
          "type": "object",
          "properties": {
            "singular": {
              "description": "The name in the singular",
              "type": "string"
            },
            "plural": {
              "description": "The name in the plural",
              "type": "string"
            }
          }
        },
        "description": {
          "description": "A description of the role",
          "type": "string"
        },
        "color": {
          "description": "The color of the role as hex code",
          "type": "string",
          "pattern": "^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$",
          "examples": [
            "#ff0000",
            "#FF0000"
          ]
        }
      },
      "required": [
        "id",
        "code"
      ],
      "$ref": "#/$defs/specification-extensions",
      "additionalProperties": false
    },
    "group": {
      "description": "A group (e.g. a class or a study group)",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique identification of the group",
          "type": "string"
        },
        "code": {
          "description": "The code of the group",
          "type": "string"
        },
        "name": {
          "description": "The name of the group",
          "type": "string"
        },
        "description": {
          "description": "A description of the group",
          "type": "string"
        },
        "color": {
          "description": "The color of the group as hex code",
          "type": "string",
          "pattern": "^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$",
          "examples": [
            "#ff0000",
            "#FF0000"
          ]
        },
        "attendees": {
          "description": "A list of attendees",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "description": "Reference to person + role",
            "$ref": "#/$defs/attendee"
          }
        },
        "groupType": {
          "description": "Reference by id to a group type",
          "$ref": "#/$defs/reference"
        },
        "timeFrame": {
          "description": "Reference by id to a time frame",
          "$ref": "#/$defs/reference"
        }
      },
      "required": [
        "id",
        "code"
      ],
      "$ref": "#/$defs/specification-extensions",
      "additionalProperties": false
    },
    "groupType": {
      "description": "A group type",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique identification of the group type",
          "type": "string"
        },
        "code": {
          "description": "The code of the group type",
          "type": "string"
        },
        "key": {
          "description": "The standardised key of the group type",
          "enum": [
            "DE.KLAS",
            "DE.JAHR",
            "DE.HORT",
            "DE.KITA",
            "DE.KIGA"
          ]
        },
        "name": {
          "description": "The name of the group type",
          "type": "object",
          "properties": {
            "singular": {
              "description": "The name in the singular",
              "type": "string"
            },
            "plural": {
              "description": "The name in the plural",
              "type": "string"
            }
          }
        },
        "description": {
          "description": "A description of the group type",
          "type": "string"
        },
        "color": {
          "description": "The color of the group type as hex code",
          "type": "string",
          "pattern": "^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$",
          "examples": [
            "#ff0000",
            "#FF0000"
          ]
        }
      },
      "required": [
        "id",
        "code"
      ],
      "$ref": "#/$defs/specification-extensions",
      "additionalProperties": false
    },
    "room": {
      "description": "A room",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique identification of the room",
          "type": "string"
        },
        "code": {
          "description": "The code of the room",
          "type": "string"
        },
        "name": {
          "description": "The name of the room",
          "type": "string"
        },
        "description": {
          "description": "A description of the room",
          "type": "string"
        },
        "color": {
          "description": "The color of the room as hex code",
          "type": "string",
          "pattern": "^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$",
          "examples": [
            "#ff0000",
            "#FF0000"
          ]
        },
        "building": {
          "description": "Reference by id to a building",
          "$ref": "#/$defs/reference"
        }
      },
      "required": [
        "id",
        "code"
      ],
      "$ref": "#/$defs/specification-extensions",
      "additionalProperties": false
    },
    "building": {
      "description": "A building",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique identification of the building",
          "type": "string"
        },
        "code": {
          "description": "The code of the building",
          "type": "string"
        },
        "name": {
          "description": "The name of the building",
          "type": "string"
        },
        "description": {
          "description": "A description of the building",
          "type": "string"
        },
        "color": {
          "description": "The color of the building as hex code",
          "type": "string",
          "pattern": "^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$",
          "examples": [
            "#ff0000",
            "#FF0000"
          ]
        },
        "campus": {
          "description": "Reference by id to a campus",
          "$ref": "#/$defs/reference"
        }
      },
      "required": [
        "id",
        "code"
      ],
      "$ref": "#/$defs/specification-extensions",
      "additionalProperties": false
    },
    "campus": {
      "description": "A campus",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique identification of the campus",
          "type": "string"
        },
        "code": {
          "description": "The code of the campus",
          "type": "string"
        },
        "name": {
          "description": "The name of the campus",
          "type": "string"
        },
        "color": {
          "description": "The color of the campus as hex code",
          "type": "string",
          "pattern": "^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$",
          "examples": [
            "#ff0000",
            "#FF0000"
          ]
        },
        "description": {
          "description": "A description of the campus",
          "type": "string"
        }
      },
      "required": [
        "id",
        "code"
      ],
      "$ref": "#/$defs/specification-extensions",
      "additionalProperties": false
    },
    "subject": {
      "description": "A subject",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique identification of the subject",
          "type": "string"
        },
        "code": {
          "description": "The code of the subject",
          "type": "string"
        },
        "name": {
          "description": "The name of the subject",
          "type": "string"
        },
        "description": {
          "description": "A description of the subject",
          "type": "string"
        },
        "color": {
          "description": "The color of the subject as hex code",
          "type": "string",
          "pattern": "^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$",
          "examples": [
            "#ff0000",
            "#FF0000"
          ]
        }
      },
      "required": [
        "id",
        "code"
      ],
      "$ref": "#/$defs/specification-extensions",
      "additionalProperties": false
    },
    "course": {
      "description": "A course",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique identification of the course",
          "type": "string"
        },
        "code": {
          "description": "The code of the course",
          "type": "string"
        },
        "name": {
          "description": "The name of the course",
          "type": "string"
        },
        "description": {
          "description": "A description of the course",
          "type": "string"
        },
        "color": {
          "description": "The color of the course as hex code",
          "type": "string",
          "pattern": "^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$",
          "examples": [
            "#ff0000",
            "#FF0000"
          ]
        },
        "subject": {
          "description": "Reference by id to a subject",
          "$ref": "#/$defs/reference"
        },
        "groups": {
          "description": "A list of group references",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "description": "Reference by id to a group",
            "$ref": "#/$defs/reference"
          }
        },
        "attendees": {
          "description": "A list of attendees",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "description": "Reference to person + role",
            "$ref": "#/$defs/attendee"
          }
        }
      },
      "required": [
        "id",
        "code"
      ],
      "$ref": "#/$defs/specification-extensions",
      "additionalProperties": false
    },
    "timeFrame": {
      "description": "A time frame",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique identification of the time frame",
          "type": "string"
        },
        "code": {
          "description": "The code of the time frame",
          "type": "string"
        },
        "name": {
          "description": "The name of the time frame",
          "type": "string"
        },
        "description": {
          "description": "A description of the time frame",
          "type": "string"
        },
        "scopeOfWeek": {
          "description": "Set of valid week days",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "mon",
              "tue",
              "wed",
              "thu",
              "fri",
              "sat",
              "sun"
            ]
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "startOfWeek": {
          "description": "Start of the week",
          "enum": [
            "mon",
            "tue",
            "wed",
            "thu",
            "fri",
            "sat",
            "sun"
          ],
          "default": "mon"
        },
        "timeSlots": {
          "description": "A list of time slots",
          "type": "array",
          "uniqueItems": true,
          "items": [
            {
              "description": "A time slot for a time frame",
              "type": "object",
              "properties": {
                "code": {
                  "description": "The code of the time slot",
                  "type": "string"
                },
                "label": {
                  "description": "The label of the time slot",
                  "type": "string"
                },
                "color": {
                  "description": "The color of the time slot as hex code",
                  "type": "string",
                  "pattern": "^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$",
                  "examples": [
                    "#ff0000",
                    "#FF0000"
                  ]
                },
                "startTime": {
                  "description": "Start time",
                  "type": "string",
                  "format": "time",
                  "examples ": [
                    "10:00:00"
                  ]
                },
                "endTime": {
                  "description": "End time",
                  "type": "string",
                  "format": "time",
                  "examples ": [
                    "10:45:00"
                  ]
                }
              },
              "required": [
                "code",
                "startTime",
                "endTime"
              ],
              "$ref": "#/$defs/specification-extensions",
              "additionalProperties": false
            }
          ]
        }
      },
      "required": [
        "id",
        "code",
        "scopeOfWeek",
        "timeSlots"
      ],
      "$ref": "#/$defs/specification-extensions",
      "additionalProperties": false
    },
    "lesson": {
      "description": "A lesson",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type keyword of the schedule element",
          "const": "lesson"
        },
        "id": {
          "description": "The unique identification of the lesson",
          "type": "string"
        },
        "code": {
          "description": "The code of the lesson",
          "type": "string"
        },
        "name": {
          "description": "The name of the lesson",
          "type": "string"
        },
        "description": {
          "description": "A description of the lesson",
          "type": "string"
        },
        "color": {
          "description": "The color of the lesson as hex code",
          "type": "string",
          "pattern": "^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$",
          "examples": [
            "#ff0000",
            "#FF0000"
          ]
        },
        "course": {
          "description": "Reference by id to a course",
          "$ref": "#/$defs/reference"
        },
        "groups": {
          "description": "A list of group references",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "description": "Reference by id to a group",
            "$ref": "#/$defs/reference"
          }
        },
        "attendees": {
          "description": "A list of attendees",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "description": "Reference to person + role",
            "$ref": "#/$defs/attendee"
          }
        },
        "rooms": {
          "description": "A list of room references",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "description": "Reference by id to a room",
            "$ref": "#/$defs/reference"
          }
        },
        "temporalExpressions": {
          "$ref": "#/$defs/temporalExpressions"
        }
      },
      "required": [
        "type",
        "id",
        "code"
      ],
      "$ref": "#/$defs/specification-extensions",
      "additionalProperties": false
    },
    "supervision": {
      "description": "A supervision",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type keyword of the schedule element",
          "const": "supervision"
        },
        "id": {
          "description": "The unique identification of the supervision",
          "type": "string"
        },
        "code": {
          "description": "The code of the supervision",
          "type": "string"
        },
        "name": {
          "description": "The name of the supervision",
          "type": "string"
        },
        "description": {
          "description": "A description of the supervision",
          "type": "string"
        },
        "color": {
          "description": "The color of the supervision as hex code",
          "type": "string",
          "pattern": "^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$",
          "examples": [
            "#ff0000",
            "#FF0000"
          ]
        },
        "attendees": {
          "description": "A list of attendees",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "description": "Reference to person + role",
            "$ref": "#/$defs/attendee"
          }
        },
        "areas": {
          "description": "A list of supervision area references",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "description": "Reference by if to a supervision area",
            "$ref": "#/$defs/reference"
          }
        },
        "temporalExpressions": {
          "$ref": "#/$defs/temporalExpressions"
        }
      },
      "required": [
        "type",
        "id",
        "code"
      ],
      "$ref": "#/$defs/specification-extensions",
      "additionalProperties": false
    },
    "supervisionArea": {
      "description": "A supervisison area",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique identification of the area",
          "type": "string"
        },
        "code": {
          "description": "The code of the area",
          "type": "string"
        },
        "name": {
          "description": "The name of the area",
          "type": "string"
        },
        "description": {
          "description": "A description of the area",
          "type": "string"
        },
        "color": {
          "description": "The color of the area as hex code",
          "type": "string",
          "pattern": "^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$",
          "examples": [
            "#ff0000",
            "#FF0000"
          ]
        },
        "campus": {
          "description": "Reference by id to a campus",
          "$ref": "#/$defs/reference"
        }
      },
      "required": [
        "id",
        "code"
      ],
      "$ref": "#/$defs/specification-extensions",
      "additionalProperties": false
    },
    "event": {
      "description": "An event (e.g. an exam or a meeting)",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type keyword of the schedule element",
          "const": "event"
        },
        "id": {
          "description": "The unique identification of the event",
          "type": "string"
        },
        "code": {
          "description": "The code of the event",
          "type": "string"
        },
        "name": {
          "description": "The name of the event",
          "type": "string"
        },
        "description": {
          "description": "A description of the event",
          "type": "string"
        },
        "color": {
          "description": "The color of the event as hex code",
          "type": "string",
          "pattern": "^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$",
          "examples": [
            "#ff0000",
            "#FF0000"
          ]
        },
        "eventType": {
          "description": "Reference by id to an event type",
          "$ref": "#/$defs/reference"
        },
        "attendees": {
          "description": "A list of attendees",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "description": "Reference to person + role",
            "$ref": "#/$defs/attendee"
          }
        },
        "rooms": {
          "description": "A list of room references",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "description": "Reference by if to a room",
            "$ref": "#/$defs/reference"
          }
        },
        "temporalExpressions": {
          "$ref": "#/$defs/temporalExpressions"
        }
      },
      "required": [
        "type",
        "id",
        "code"
      ],
      "$ref": "#/$defs/specification-extensions",
      "additionalProperties": false
    },
    "eventType": {
      "description": "An event type",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique identification of the event type",
          "type": "string"
        },
        "code": {
          "description": "The code of the event type",
          "type": "string"
        },
        "name": {
          "description": "The name of the event type",
          "type": "object",
          "properties": {
            "singular": {
              "description": "The name in the singular",
              "type": "string"
            },
            "plural": {
              "description": "The name in the plural",
              "type": "string"
            }
          }
        },
        "description": {
          "description": "A description of the event type",
          "type": "string"
        },
        "color": {
          "description": "The color of the event type as hex code",
          "type": "string",
          "pattern": "^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$",
          "examples": [
            "#ff0000",
            "#FF0000"
          ]
        }
      },
      "required": [
        "id",
        "code"
      ],
      "$ref": "#/$defs/specification-extensions",
      "additionalProperties": false
    },
    "holiday": {
      "description": "A holiday",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type keyword of the schedule element",
          "const": "holiday"
        },
        "id": {
          "description": "The unique identification of the holiday",
          "type": "string"
        },
        "code": {
          "description": "The code of the holiday",
          "type": "string"
        },
        "name": {
          "description": "The name of the holiday",
          "type": "string"
        },
        "description": {
          "description": "A description of the holiday",
          "type": "string"
        },
        "color": {
          "description": "The color of the holiday as hex code",
          "type": "string",
          "pattern": "^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$",
          "examples": [
            "#ff0000",
            "#FF0000"
          ]
        },
        "holidayType": {
          "description": "Holiday type",
          "enum": [
            "public",
            "school",
            "custom"
          ]
        },
        "temporalExpressions": {
          "$ref": "#/$defs/temporalExpressions"
        }
      },
      "required": [
        "type",
        "id",
        "code"
      ],
      "$ref": "#/$defs/specification-extensions",
      "additionalProperties": false
    },
    "announcement": {
      "description": "An announcement",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type keyword of the schedule element",
          "const": "announcement"
        },
        "id": {
          "description": "The unique identification of the announcement",
          "type": "string"
        },
        "code": {
          "description": "The code of the announcement",
          "type": "string"
        },
        "name": {
          "description": "The name of the announcement",
          "type": "string"
        },
        "description": {
          "description": "A description of the announcement",
          "type": "string"
        },
        "color": {
          "description": "The color of the announcement as hex code",
          "type": "string",
          "pattern": "^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$",
          "examples": [
            "#ff0000",
            "#FF0000"
          ]
        },
        "priority": {
          "description": "The priority of the announcement",
          "enum": [
            "important",
            "alarm"
          ]
        },
        "temporalExpressions": {
          "$ref": "#/$defs/temporalExpressions"
        }
      },
      "required": [
        "type",
        "id",
        "code"
      ],
      "$ref": "#/$defs/specification-extensions",
      "additionalProperties": false
    },
    "gap": {
      "description": "A gap for a lesson or a supervision",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type keyword of the schedule element",
          "const": "gap"
        },
        "id": {
          "description": "The unique identification of the gap",
          "type": "string"
        },
        "code": {
          "description": "The code of the gap",
          "type": "string"
        },
        "name": {
          "description": "The name of the gap",
          "type": "string"
        },
        "description": {
          "description": "A description of the gap",
          "type": "string"
        },
        "reference": {
          "description": "A reference to a lessonor a supervision",
          "type": "object",
          "properties": {
            "type": {
              "description": "Reference type",
              "enum": [
                "lesson",
                "supervision"
              ]
            },
            "refId": {
              "description": "Reference by id",
              "type": "string"
            }
          },
          "required": [
            "type",
            "refId"
          ],
          "additionalProperties": false
        },
        "reasons": {
          "description": "The reason(s) of the gap",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/absence"
              },
              {
                "$ref": "#/$defs/stash"
              }
            ]
          }
        },
        "resolutions": {
          "description": "The resolution(s) of the gap",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/substitution"
              },
              {
                "$ref": "#/$defs/cancellation"
              }
            ]
          }
        },
        "temporalExpressions": {
          "$ref": "#/$defs/temporalExpressions"
        }
      },
      "required": [
        "type",
        "id",
        "code",
        "reference"
      ],
      "$ref": "#/$defs/specification-extensions",
      "additionalProperties": false
    },
    "absence": {
      "description": "An absence",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type keyword of the gap reason",
          "const": "absence"
        },
        "id": {
          "description": "The unique identification of the absence",
          "type": "string"
        },
        "code": {
          "description": "The code of the absence",
          "type": "string"
        },
        "name": {
          "description": "The name of the absence",
          "type": "string"
        },
        "description": {
          "description": "A description of the absence",
          "type": "string"
        },
        "reference": {
          "description": "A reference to a person, a group or a room",
          "type": "object",
          "properties": {
            "type": {
              "description": "Reference type",
              "enum": [
                "person",
                "group",
                "room"
              ]
            },
            "refId": {
              "description": "Reference by id",
              "type": "string"
            }
          },
          "required": [
            "type",
            "refId"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "type",
        "id",
        "code"
      ],
      "$ref": "#/$defs/specification-extensions",
      "additionalProperties": false
    },
    "stash": {
      "description": "A stash",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type keyword of the gap reason",
          "const": "stash"
        },
        "id": {
          "description": "The unique identification of the stash",
          "type": "string"
        },
        "code": {
          "description": "The code of the stash",
          "type": "string"
        },
        "name": {
          "description": "The name of the stash",
          "type": "string"
        },
        "description": {
          "description": "A description of the stash",
          "type": "string"
        },
        "reference": {
          "description": "A reference to a person",
          "type": "object",
          "properties": {
            "type": {
              "description": "Reference type",
              "enum": [
                "person"
              ]
            },
            "refId": {
              "description": "Reference by id",
              "type": "string"
            }
          },
          "required": [
            "type",
            "refId"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "type",
        "id",
        "code"
      ],
      "$ref": "#/$defs/specification-extensions",
      "additionalProperties": false
    },
    "substitution": {
      "description": "A substitution",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type keyword of the gap resolution",
          "const": "substitution"
        },
        "id": {
          "description": "The unique identification of the substitution",
          "type": "string"
        },
        "code": {
          "description": "The code of the substitution",
          "type": "string"
        },
        "name": {
          "description": "The name of the substitution",
          "type": "string"
        },
        "description": {
          "description": "A description of the substitution",
          "type": "string"
        },
        "reference": {
          "description": "A reference to a lesson or a supervision",
          "type": "object",
          "properties": {
            "type": {
              "description": "Reference type",
              "enum": [
                "lesson",
                "supervision"
              ]
            },
            "refId": {
              "description": "Reference by id",
              "type": "string"
            }
          },
          "required": [
            "type",
            "refId"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "type",
        "id",
        "code",
        "reference"
      ],
      "$ref": "#/$defs/specification-extensions",
      "additionalProperties": false
    },
    "cancellation": {
      "description": "A cancellation",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type keyword of the gap resolution",
          "const": "cancellation"
        },
        "id": {
          "description": "The unique identification of the cancellation",
          "type": "string"
        },
        "code": {
          "description": "The code of the cancellation",
          "type": "string"
        },
        "name": {
          "description": "The name of the cancellation",
          "type": "string"
        },
        "description": {
          "description": "A description of the cancellation",
          "type": "string"
        },
        "behaviour": {
          "description": "Cancellation behaviour",
          "enum": [
            "leaveRoom",
            "stayInRoom"
          ]
        }
      },
      "required": [
        "type",
        "id",
        "code"
      ],
      "additionalProperties": false
    },
    "oneTimeExpression": {
      "description": "An one-time temporal expression",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type keyword of the temporal expression",
          "const": "onetime"
        },
        "startTimepoint": {
          "description": "Start timepoint of the temporal expression",
          "type": "string",
          "format": "date-time",
          "examples ": [
            "2023-09-01T10:00:00",
            "2023-09-01T10:00:00+02:00"
          ]
        },
        "endTimepoint": {
          "description": "End timepoint of the temporal expression",
          "type": "string",
          "format": "date-time",
          "examples ": [
            "2023-09-01T10:45:00",
            "2023-09-01T10:45:00+02:00"
          ]
        },
        "operation": {
          "description": "Should this temporal expression be added or subtracted?",
          "enum": [
            "add",
            "subtract"
          ],
          "default": "add"
        }
      },
      "required": [
        "type",
        "startTimepoint",
        "endTimepoint"
      ],
      "additionalProperties": false
    },
    "weeklyExpression": {
      "description": "A weekly temporal expression",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type keyword of the temporal expression",
          "const": "weekly"
        },
        "startTimepoint": {
          "description": "Start timepoint of the temporal expression",
          "type": "string",
          "format": "date-time",
          "examples ": [
            "2023-09-01T10:00:00",
            "2023-09-01T10:00:00+02:00"
          ]
        },
        "endTimepoint": {
          "description": "End timepoint of the temporal expression",
          "type": "string",
          "format": "date-time",
          "examples ": [
            "2023-09-01T10:45:00",
            "2023-09-01T10:45:00+02:00"
          ]
        },
        "weeks": {
          "description": "Set of valid date weeks per year",
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^\\d+:(([1-4][0-9]?|5[0-3]?|[6-9])|([1-4][0-9]?|5[0-3]?|[6-9])-([1-4][0-9]?|5[0-3]?|[6-9]))(,(([1-4][0-9]?|5[0-3]?|[6-9])|([1-4][0-9]?|5[0-3]?|[6-9])-([1-4][0-9]?|5[0-3]?|[6-9])))*$"
          },
          "examples ": [
            [
              "2023:36,38,41,44,47,50",
              "2024:1,2,3,4"
            ],
            [
              "2023:37-40,44-47,51",
              "2024:1-4"
            ]
          ]
        },
        "validFrom": {
          "description": "Valid from",
          "type": "string",
          "format": "date",
          "examples ": [
            "2023-09-01"
          ]
        },
        "validTo": {
          "description": "Valid to",
          "type": "string",
          "format": "date",
          "examples ": [
            "2024-01-31"
          ]
        },
        "operation": {
          "description": "Should this temporal expression be added or subtracted?",
          "type": "string",
          "enum": [
            "add",
            "subtract"
          ],
          "default": "add"
        }
      },
      "required": [
        "startTimepoint",
        "endTimepoint"
      ],
      "additionalProperties": false
    },
    "attendee": {
      "description": "An attendee",
      "type": "object",
      "properties": {
        "refId": {
          "description": "A reference by id to a person",
          "type": "string"
        },
        "role": {
          "description": "Reference by id to a role",
          "$ref": "#/$defs/reference"
        }
      },
      "required": [
        "refId",
        "role"
      ],
      "additionalProperties": false
    },
    "reference": {
      "description": "A reference by id",
      "type": "object",
      "properties": {
        "refId": {
          "description": "The id",
          "type": "string"
        }
      },
      "required": [
        "refId"
      ],
      "additionalProperties": false
    },
    "temporalExpressions": {
      "description": "A list of temporal expressions",
      "type": "array",
      "items": {
        "anyOf": [
          {
            "$ref": "#/$defs/oneTimeExpression"
          },
          {
            "$ref": "#/$defs/weeklyExpression"
          }
        ]
      }
    },
    "specification-extensions": {
      "patternProperties": {
        "^x-": true
      }
    }
  }
}